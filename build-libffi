#!/bin/bash
set -e
# set -x

help_text() {
    echo "Usage:
  ${0##*/} [-h] --prefix=... [--version=X.Y] [host1 host2 host3]

  where hostN is e.g. aarch64-linux-android. If no hosts are given
  will build for aarch64-linux-android, arm-linux-androideabi,
  aarch64-apple-ios, x86_64-apple-ios, and arm-linux-gnueabihf.

Options:

  -h, --help
    display this help and exit

  --prefix=<prefix>
    the prefix to pass to configure"
}

while [ "$#" -gt 0 ]; do
    case "$1" in
        --prefix=*) prefix="${1#*=}"; shift 1;;
        -h|--help) help_text; exit;;
        -*) echo "unknown option: $1" >&2; exit 1;;
        *) args+="$1"; shift 1;;
    esac
done

if [ -z $prefix ]; then
    echo "no --prefix given" >&2
    exit 1
fi


#HOSTS=${args:-"arm-linux-androideabi"}
HOSTS=${args:-"x86-linux-android"}


if [ ! -d libffi ]; then
    git clone https://github.com/libffi/libffi.git
fi

cd libffi
for host in $HOSTS; do
		# extract the arch as the first component of the target triple
    arch="${host%%-*}"
    host_for_clang="$host"
    host_for_toolchain="$host"
    # rewrite aarch64 -> arm64; this is such a mess...
    if [ "$arch" == "arm" ]; then host_for_clang="armv7-linux-androideabi"; fi
    if [ "$arch" == "aarch64" ]; then arch="arm64"; fi
    if [ "$arch" == "x86" ]; then host_for_toolchain="x86"; fi
    if [ "$arch" == "x86_64" ]; then host_for_toolchain="x86_64"; fi
    
    echo "Cleaning up build folder..."
    git clean -x -f -d
    git reset --hard HEAD
    ./autogen.sh
    echo "Configuring $host... ${host_for_clang}"
    CC="${host_for_clang}-clang" CXX="${host_for_clang}-clang" \
    CFLAGS="$CFLAGS -L$HOME/dev_kit/Android/sdk/ndk-bundle/toolchains/${host_for_toolchain}-4.9/prebuilt/darwin-x86_64/lib/gcc/i686-linux-android/4.9.x -L$HOME/dev_kit/Android/sdk/ndk-bundle/platforms/android-21/arch-$arch/usr/lib -I/Users/lihanguang/dev_kit/Android/sdk/ndk-bundle/platforms/android-21/arch-$arch/usr/include" \
        ./configure --prefix=$prefix/$host --host=$host \
        --enable-static=yes --enable-shared=yes \
        --silent
    echo "Building $host"
    make -j --silent
    echo "Installing $host..."
    make --silent install
done
